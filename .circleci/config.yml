# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
    print_pipeline_id:
      description: using reuseable parameter.
      parameters:
          id:
            type: string
      steps:
        - run: echo << parameters.id >>

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:

  job_failure:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - run:
          name: Failed job
          command: return 1

      - run:
          name: Run when fails
          command: echo "Hello Error!!!"
          when: on_fail

  new-job:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - print_pipeline_id:
          id: << pipeline.id >>
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  
  print_output_file:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: "Printing output.txt"
          command: cat output.txt
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - new-job
      - job_failure
